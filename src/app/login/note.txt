data sharing
 data is shared b/w the html and ts file

it will be called as follow from now
html=view
ts=component


DATA BINDING
  
  1.one way binding=sharing will be only in one direction

      1.1.component to view=data from ts to html file
        1.1.1.string interpolation -symbol used is  {{}}
               example in ts file and called in html
        1.1.2.property binding- syntax:  [property]="value"      
              example in ts file and called in html

      1.2.view to component=data from html to ts file (important ,to tke data from input box)
        1.2.1. event binding -syntax : (event name)="methodname()"       eg:click in button in html file and login methos in ts file
        1.2.2. dollar event binding-syntax: (event name)="methodname($event)"  eg:access acnum and pass from input
               
               two events are (change) and (click)
        1.2.3.event binding using template reference variable-syntax: #variablename   eg:in html file inpt boxes,balave in ts file login(acno,psw)


  2.Two way binding techniques=sharing will be in both direction

       2.1.ngModel    -syntax : [(ngModel)]="value"
                          Formsmodule(a module in ngModel) ,whenever we are using a module we have manually import in
                          app.module.ts (import section)[7-11-22]

                          eg: in html input box 





  ROUTING IN ANGULAR                  

  navigate by url (instaed of window.location)                                  
         it is a method of class router

 dependency injection =to share datas b/w two classes    
 dependency injection is given inside constructor [in this program in login page]
 access specifier(public/private)  [in this program login page ts file]
 syntax : accessspecifier(private/public) variable :class
 syntax to call : this.router.navigatebyurl('path of the required component')
 since it is a variable and using it inside a class we have use this ,that is why this in above sentence


if we need to give redirection in method we use navigate by url [eg inlogin.ts]
if we need to give link in any path we use router link          [eg in login.html]




 ANGULAR SERVICES
     to store datas (redundant datas) [datas that are always in need]

  to create a servce : ng g s servicename 


  
  ANGULAR DIRECTIVES   (11-11 in app from 1ht 7 min)

    -structural directive -to get data from an array,can aplly datas directlt from array
                          -ngFor instead of for loop,used inside html




  FORM VALIDATION IN ANGULAR

      1.template driven form- first create html from and then apply validation [this is very difficult]

      2.model driven form   -we create a model of the form in ts we need and then we apply validation           

               ReactiveFormsModule-it is a module used for creating modelform                  
               formBuilder - class in reactiveform form modelform creation

                    a model form contains
                                     -form group
                                     -array
                                     -controller
                                                 

       this.registerform.get('uname')?.errors          
       can acees the o/p of regular attribute

       if it matches with content  ---empty
       not matching  [error]              ---content         
                            



   LOCAL STORAGE IN ANGULAR
   
       -setItem-to store data
       -getItem-to get data 
       -removeItem-to delete data


  
  PARENT CHILD COMMUNICATION

        parent -> child
        child  -> parent

  eg: 
      parent is dashboard
      child is delete




 AMGULAR PIPES

   date PIPES
    {{value_expression | date [ :format [ :timezone [ :locale ]]] }}